/* This file is part of Eovim, which is under the MIT License ****************/

color_classes {
   color_class { name: "completion";
      color: 188 188 188 255;
   }
   color_class { name: "completion_type";
      color: 188 188 255 255;
   }

   color_class { name: "compl_variable";
      color: 0 255 255 255;
   }
   color_class { name: "compl_function";
      color: 255 255 0 255;
   }
   color_class { name: "compl_member";
      color: 255 0 255 255;
   }
   color_class { name: "compl_type";
      color: 0 255 0 255;
   }
   color_class { name: "compl_define";
      color: 0 0 255 255;
   }
   color_class { name: "compl_default";
      color: 255 255 255 255;
   }
}

text_classes {
   text_class { name: "completion_text";
      font: "Mono";
      size: 12;
   }
}

group { "eovim/completion/kind";
   script {
      public message(Msg_Type:type, id, ...) {
         if (id == THEME_MSG_COMPLETION_KIND) {
            new text[4];
            getsarg(2, text, 4);

            new buf[32]

            /* See https://neovim.io/doc/user/insert.html#complete-items for
             * the list of supported completion items */
            switch (text[0]) {
               case 'v':
                  strcat(buf, "compl_variable");
               case 'f':
                  strcat(buf, "compl_function");
               case 'm':
                  strcat(buf, "compl_member");
               case 't':
                  strcat(buf, "compl_type");
               case 'd':
                  strcat(buf, "compl_define");
               default:
                  strcat(buf, "compl_default");
            }
            new part = PART:"text";
            custom_state(part, "default", 0.0);
            set_state_val(part, STATE_COLOR_CLASS, buf);
            set_state(part, "custom", 0.0);
         }
      }
   }

   parts {
      text { "text"; nomouse;
         desc { "default";
            color_class: "compl_default";
            text {
               min: 1 1;
               align: 0.0 0.5;
               text_class: "completion_text";
            }
            rel1.offset: 2 0;
         }
      }
   }
}

group { "eovim/completion/type";
   parts {
      text { "text"; nomouse;
         desc { "default";
            color_class: "completion_type";
            text {
               min: 1 1;
               align: 1.0 0.5;
               text_class: "completion_text";
            }
         }
      }
   }
}

group { "eovim/completion/word";
   parts {
      text { "text"; nomouse;
         desc { "default";
            color_class: "completion_word";
            text {
               min: 1 1;
               align: 0.0 0.5;
               text_class: "completion_text";
            }
         }
      }
   }
}

group { "eovim/completion";
   images {
      image: "tooltip-base.png" COMP;
   }
   parts {
      image { "base"; nomouse;
         desc { "default";
            image.normal: "tooltip-base.png";
            image.border: 7 7 6 8;
            image.middle: SOLID;
            rel.to: "eovim.completion";
            rel1.offset: -8 -6;
            rel2.offset: 7 8;
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            visible: 1;
         }
      }
      swallow { "eovim.completion";
         desc { "default";
            align: 0.0 0.0;
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            visible: 1;
         }
      }

   }
   programs {
      program { signal: "eovim,completion,show"; source: "eovim";
         action: STATE_SET "visible";
         target: "base";
         target: "eovim.completion";
      }
      program { signal: "eovim,completion,hide"; source: "eovim";
         action: STATE_SET "default";
         target: "base";
         target: "eovim.completion";
      }
   }
}
